#!/bin/bash

function mark() {
  [[ -z "${FBOOKMARK_LOCATION}" ]] && FBOOKMARK_LOCATION="${XDG_CONFIG_HOME:-$HOME/.config}/fbookmark"

  if [[ "${PWD}" == "${HOME}" ]]; then
    full_name="HOME: ${HOME}"
  else
    if [[ -n "$*" ]]; then
      mark_name="$*"
    else
      mark_name=$(echo "${PWD}" | awk -F '/' '{print $NF}')
    fi
    full_name="${mark_name}: ${PWD}"
  fi

  [[ ! -f "${FBOOKMARK_LOCATION}/marks" ]] && mkdir -p "${FBOOKMARK_LOCATION}" && touch "${FBOOKMARK_LOCATION}/marks"

  # check if the mark already exists
  if grep -qx "${full_name}" "${FBOOKMARK_LOCATION}/marks"; then
    echo "*** Mark already exists ***"
  else
    echo "*** Mark has been added ***"
    echo "${full_name}" >> "${FBOOKMARK_LOCATION}/marks"
  fi

  esc=$(printf '\033')
  sed "s|^\\(.*\\): \\(.*\\)$|${esc}[m\\1: ${esc}[36m\\2|" <(echo "${full_name}")
}

function fm() {
  local SED_ARG cd_to esc lines key target dryrun query=""

  while getopts ":dq:" opt; do
    case "$opt" in
      d)
        dryrun='true'
        ;;
      q)
        query="$OPTARG"
        ;;
      *)
        echo "Invalid option: $OPTARG"
        return
        ;;
    esac
  done

  [[ -z "${FBOOKMARK_LOCATION}" ]] && FBOOKMARK_LOCATION="${XDG_CONFIG_HOME:-$HOME/.config}/fbookmark"
  [[ ! -f "${FBOOKMARK_LOCATION}/marks" ]] && echo 'Mark file not found, add FBOOKMARK_LOCATION to rc file' && return
  esc=$(printf '\033')

  lines=$(sed "s|^\\(.*\\): \\(.*\\)$|${esc}[32m\\1: ${esc}[36m\\2|" "${FBOOKMARK_LOCATION}"/marks | \
    fzf --tac --exit-0 --multi --expect=ctrl-d --ansi --query="${query}" --preview="echo {} | awk '{print \$2}' | xargs -I __ tree -C -L 1 __")

  key=$(echo "${lines}" | head -1)
  target=$(echo "${lines}" | sed 1d)

  if [[ -n "${key}" && "${key}" == 'ctrl-d' ]]; then
    SED_ARG=("-i")
    if [[ "$OSTYPE" =~ "darwin" ]]; then
      SED_ARG=("-i" "")
    fi
    while IFS='' read -r line; do
      sed "${SED_ARG[@]}" -e "s|^${line}$||g" "${FBOOKMARK_LOCATION}/marks"
      sed "${SED_ARG[@]}" '/^[[:space:]]*$/d' "${FBOOKMARK_LOCATION}/marks"
    done <<< "${target}"
  else
    cd_to=$(echo "${target}" | head -1 | \
      awk '{print $2}')
    if [[ -n "${dryrun}" ]]; then
      echo "${cd_to}"
    else
      cd "${cd_to}" || echo "Invalid filepath"
    fi
  fi
}
